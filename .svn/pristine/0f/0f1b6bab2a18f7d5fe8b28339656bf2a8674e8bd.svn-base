package com.mono.ums.controller;

import java.io.File;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.mono.ums.dto.DestTempDTO;
import com.mono.ums.dto.SdkDTO;
import com.mono.ums.dto.SendDTO;
import com.mono.ums.service.DestTempService;
import com.mono.ums.service.SendService;

@Controller
@RequestMapping("/send/*")
public class SendController {

	@Autowired
	DestTempService DestTempService;
	
	@Autowired
	SendService SendService;

	@RequestMapping("/send_sms")
	public String send_sms() {
		return "send/send_sms";

	}
	//수신자 추가
	@ResponseBody
	@PostMapping("/destAdd")
	public String destAdd(DestTempDTO DestTempDTO, HttpServletRequest req) throws Exception {
		HttpSession session=req.getSession();
		session.setAttribute("session_id", "session_id");
		String session_id=(String)session.getId();
		System.out.println("session_id는::"+session_id);
		DestTempDTO.setSession_id(session_id);
		System.out.println("여기는 destAdd 수신자 추가 메소드 입니다.");
		System.out.println(DestTempDTO.toString());
		DestTempService.destAdd(DestTempDTO);
		
		return "redirect:/send/send_sms";
	}

	//수신자 삭제 삭제는 반드시 post방식으로 처리
	@PostMapping("/destDelete")
	public String destDelete(DestTempDTO DestTempDTO)throws Exception{
		System.out.println("여기는 destDelete 수신자 삭제 메소드 입니다.");
		System.out.println(DestTempDTO.toString());
		DestTempService.destDelete(DestTempDTO);
		return"redirect:/send/send_sms";
	}
	
	//메시지 전송
	@ResponseBody
	@PostMapping("/sendMsg")
	public String sendMsg(SendDTO SendDTO, SdkDTO SdkDTO)throws Exception{
		System.out.println("여기는 sendMsg 메시지 전송 메소드 입니다.");
		System.out.println(SendDTO.toString());
		SendDTO.getMsg_id();
		
		SendService.sendMsg(SendDTO);
		SendService.destCopy(SendDTO);
		System.out.println("복사완료");
		System.out.println(SendDTO);
		SendService.deleteTemp(SendDTO);
		System.out.println("템프테이블 삭제 완료");
		SendService.tJoin(SendDTO);
		System.out.println("조인됨");
		System.out.println("*********"+SdkDTO+"*********");
		//dest_info에 값넣을것 합치기;
		SdkDTO.getDest_name();
		SdkDTO.getDest_num();
		SdkDTO.setDest_info(SdkDTO.getDest_name()+"^"+SdkDTO.getDest_num());
		SendService.insertSDK(SdkDTO);
		System.out.println("*********SDK테이블에 넣기 완료 ******");
		
		return "redirect:/send/send_sms";
	}
	
	@ResponseBody
	@PostMapping("/sendMsg2")
	public String sendMsg2(SendDTO SendDTO)throws Exception{
		System.out.println("여기는 sendMsg 메시지 전송 메소드 입니다.");
		System.out.println(SendDTO.toString());
		SendDTO.getMsg_id();
		
		SendService.sendMsg2(SendDTO);
		SendService.destCopy(SendDTO);
		System.out.println("복사완료");
		SendService.deleteTemp(SendDTO);
		System.out.println("템프테이블 삭제 완료");
		return "redirect:/send/send_sms";
	}
	//mms화면 매핑 
	@RequestMapping("/send_mms")
	public String send_mms() {
		return "send/send_mms";
	}
	//mms파일첨부 메시지 전송
	@ResponseBody
	@PostMapping("/MMSsendMsg")
	public String MMSsendMsg(SendDTO SendDTO,MultipartFile[] attach_file)throws Exception{
		System.out.println("여기는 MMSsendMsg 메시지 전송 메소드 입니다.");
		System.out.println(SendDTO.toString());
		String uploadFolder="C:\\upload";
		
		for(MultipartFile multipartFile : attach_file){
			System.out.println("*********************");
			System.out.println("upload file name:  "+ multipartFile.getOriginalFilename());
			System.out.println("upload file Size:"+multipartFile.getSize());
			
			String uploadFileName=multipartFile.getOriginalFilename();
			uploadFileName=uploadFileName.substring(uploadFileName.lastIndexOf("\\")+1);
			System.out.println("only file name:"+uploadFileName);
			File saveFile=new File(uploadFolder,uploadFileName);
			
			try{
				multipartFile.transferTo(saveFile);
			}catch(Exception e){
				System.out.println(e.getMessage());
			}
		}
		SendService.MMSsendMsg(SendDTO);
		return "redirect:/send/send_mms";
	}
	@RequestMapping("/send_vms")
	public String send_vms() {
		return "send/send_vms";
	}

	@RequestMapping("/send_fms")
	public String send_fms() {
		return "send/send_fms";
	}
}
